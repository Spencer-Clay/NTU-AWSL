{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[495],{2326:function(t,s,a){\"use strict\";a.r(s);var e=a(75),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[a(\"h2\",{attrs:{id:\"🌀-dismap-asset-discovery-and-identification-tool\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#🌀-dismap-asset-discovery-and-identification-tool\"}},[t._v(\"#\")]),t._v(\" 🌀 Dismap - Asset discovery and identification tool\")]),t._v(\" \"),a(\"p\",[a(\"a\",{attrs:{href:\"https://github.com/zhzyker/dismap\"}},[a(\"img\",{attrs:{alt:\"Release\",src:\"https://img.shields.io/badge/golang-1.6+-9cf\"}})]),t._v(\" \"),a(\"a\",{attrs:{href:\"https://github.com/zhzyker/dismap\"}},[a(\"img\",{attrs:{alt:\"Release\",src:\"https://img.shields.io/badge/dismap-0.3-ff69b4\"}})]),t._v(\" \"),a(\"a\",{attrs:{href:\"https://github.com/zhzyker/dismap\"}},[a(\"img\",{attrs:{alt:\"Release\",src:\"https://img.shields.io/badge/LICENSE-GPL-important\"}})]),t._v(\" \"),a(\"img\",{attrs:{src:\"https://img.shields.io/github/stars/zhzyker/dismap?color=success\",alt:\"GitHub Repo stars\"}}),t._v(\" \"),a(\"img\",{attrs:{src:\"https://img.shields.io/github/forks/zhzyker/dismap\",alt:\"GitHub forks\"}}),t._v(\" \"),a(\"img\",{attrs:{src:\"https://img.shields.io/github/downloads/zhzyker/dismap/total?color=blueviolet\",alt:\"GitHub all release\"}}),a(\"br\"),t._v(\" \"),a(\"a\",{attrs:{href:\"https://github.com/zhzyker/dismap/blob/main/readme-zh.md\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"[中文 Readme]\"),a(\"OutboundLink\")],1),a(\"br\"),t._v(\"\\nDismap positioning is an asset \"),a(\"strong\",[t._v(\"discovery\")]),t._v(\" and \"),a(\"strong\",[t._v(\"identification\")]),t._v(\" tool. It can quickly identify protocols and fingerprint information such as web/tcp/udp, locate asset types, and is suitable for internal and external networks. It assists red team personnel to quickly locate potential risk asset information, and assist blue team personnel to detect Suspected Fragile Assets\")]),t._v(\" \"),a(\"p\",[t._v(\"Dismap has a complete fingerprint rule base, currently including tcp/udp/tls protocol fingerprints and \"),a(\"strong\",[t._v(\"4500+ web fingerprint rules\")]),t._v(\", which can identify favicon, body, header, etc. The introduction to the rule base is located at \"),a(\"a\",{attrs:{href:\"https://github.com/zhzyker/dismap#-rulelab\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"RuleLab\"),a(\"OutboundLink\")],1)]),t._v(\" \"),a(\"p\",[a(\"s\",[t._v(\"Scan results can be directly sent to \"),a(\"a\",{attrs:{href:\"https://github.com/zhzyker/vulmap\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"vulmap\"),a(\"OutboundLink\")],1),t._v(\"(>=0.8) for vulnerability scanning.\")]),t._v(\" In version 0.3, the text result has been changed, the json file result has been added, and vulmap will support linkage in >= 1.0\")]),t._v(\" \"),a(\"h2\",{attrs:{id:\"🏂-run\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#🏂-run\"}},[t._v(\"#\")]),t._v(\" 🏂 Run\")]),t._v(\" \"),a(\"p\",[t._v(\"Dismap is a binary file for Linux, MacOS, and Windows. Go to \"),a(\"a\",{attrs:{href:\"https://github.com/zhzyker/dismap/releases\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"Release\"),a(\"OutboundLink\")],1),t._v(\" to download the corresponding version to run:\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-Bash line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"# Linux or MacOS\")]),t._v(\"\\nzhzyker@debian:~$ \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"chmod\")]),t._v(\" +x dismap-0.3-linux-amd64\\nzhzyker@debian:~$ ./dismap-0.3-linux-amd64 -h\\n\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"# Windows\")]),t._v(\"\\nC:\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"\\\\\")]),t._v(\"Users\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"\\\\\")]),t._v(\"zhzyker\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"\\\\\")]),t._v(\"Desktop\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\">\")]),t._v(\" dismap-0.3-windows-amd64.exe -h\\n\")])]),t._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[t._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"3\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"4\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"5\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"6\")]),a(\"br\")])]),a(\"blockquote\",[a(\"p\",[a(\"img\",{attrs:{src:\"https://github.com/zhzyker/zhzyker/blob/main/dismap-images/dismap-0.3.png\",alt:\"dismap\"}})])]),t._v(\" \"),a(\"h2\",{attrs:{id:\"🎡-optons\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#🎡-optons\"}},[t._v(\"#\")]),t._v(\" 🎡 Optons\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-Python line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-python\"}},[a(\"code\",[t._v(\"  \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),t._v(\"f\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),a(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[t._v(\"file\")]),t._v(\" string     Parse the target \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"from\")]),t._v(\" the specified \"),a(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[t._v(\"file\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"for\")]),t._v(\" batch recognition\\n  \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),t._v(\"h\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),a(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[t._v(\"help\")]),t._v(\"            Show \"),a(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[t._v(\"help\")]),t._v(\"\\n  \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),t._v(\"i\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),t._v(\"ip string       Network segment \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),t._v(\"e\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"g\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),t._v(\"i \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"192.168\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\".1\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\".0\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"/\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"24\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"or\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),t._v(\"i \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"192.168\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\".1\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\".1\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"10\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),t._v(\"\\n  \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),t._v(\"j\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),t._v(\"json string     Scan result \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"in\")]),t._v(\" json \"),a(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[t._v(\"format\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),t._v(\"e\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"g\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),t._v(\"j r\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"json\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),t._v(\"\\n  \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),t._v(\"l\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),t._v(\"level \"),a(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[t._v(\"int\")]),t._v(\"       Specify log level \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\"Fatal \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\"Error \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"2\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\"Info \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"3\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\"Warning \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"4\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\"Debug \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"5\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\"Verbose\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"default \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"3\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n  \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),t._v(\"m\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),t._v(\"mode string     Specify the protocol \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),t._v(\"e\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"g\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),t._v(\"m mysql\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"/\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),t._v(\"m http\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),t._v(\"\\n      \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),t._v(\"nc              Do \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"not\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"print\")]),t._v(\" character colors\\n      \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),t._v(\"np              Not use ICMP\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"/\")]),t._v(\"PING to detect surviving hosts\\n  \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),t._v(\"o\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),t._v(\"output string   Save the scan results to the specified \"),a(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[t._v(\"file\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"default \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"output.txt\"')]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n  \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),t._v(\"p\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),t._v(\"port string     Custom scan ports \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),t._v(\"e\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"g\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),t._v(\"p \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"80\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"443\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"or\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),t._v(\"p \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"65535\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),t._v(\"\\n      \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),t._v(\"proxy string    Use proxy scan\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" support http\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"/\")]),t._v(\"socks5 protocol \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),t._v(\"e\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"g\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),t._v(\"proxy socks5\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"//\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"127.0\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\".0\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\".1\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1080\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),t._v(\"\\n  \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),t._v(\"t\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),t._v(\"thread \"),a(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[t._v(\"int\")]),t._v(\"      Number of concurrent threads \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"default \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"500\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n      \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),t._v(\"timeout \"),a(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[t._v(\"int\")]),t._v(\"     Response timeout time\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" the default \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"is\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"5\")]),t._v(\" seconds \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"default \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"5\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n      \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),a(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[t._v(\"type\")]),t._v(\" string     Specify the \"),a(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[t._v(\"type\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),t._v(\"e\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"g\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),a(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[t._v(\"type\")]),t._v(\" tcp\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"/\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),a(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[t._v(\"type\")]),t._v(\" udp\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),t._v(\"\\n  \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),t._v(\"u\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),t._v(\"uri string      Specify a target URI \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),t._v(\"e\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"g\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),t._v(\"u https\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"//\")]),t._v(\"example\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"com\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),t._v(\"\\n\")])]),t._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[t._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"3\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"4\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"5\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"6\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"7\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"8\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"9\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"10\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"11\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"12\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"13\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"14\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"15\")]),a(\"br\")])]),a(\"h2\",{attrs:{id:\"🎨-examples\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#🎨-examples\"}},[t._v(\"#\")]),t._v(\" 🎨 Examples\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-Bash line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[a(\"code\",[t._v(\"zhzyker@debian:~$ ./dismap -i \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"192.168\")]),t._v(\".1.1/24\\nzhzyker@debian:~$ ./dismap -i \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"192.168\")]),t._v(\".1.1/24 -o result.txt -j result.json\\nzhzyker@debian:~$ ./dismap -i \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"192.168\")]),t._v(\".1.1/24 --np --timeout \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"10\")]),t._v(\"\\nzhzyker@debian:~$ ./dismap -i \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"192.168\")]),t._v(\".1.1/24 -t \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1000\")]),t._v(\"\\nzhzyker@debian:~$ ./dismap -u https://github.com/zhzyker/dismap\\nzhzyker@debian:~$ ./dismap -u mysql://192.168.1.1:3306\\nzhzyker@debian:~$ ./dismap -i \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"192.168\")]),t._v(\".1.1/24 -p \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),t._v(\"-65535\\n\")])]),t._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[t._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"3\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"4\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"5\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"6\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"7\")]),a(\"br\")])]),a(\"h2\",{attrs:{id:\"⛪-discussion\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#⛪-discussion\"}},[t._v(\"#\")]),t._v(\" ⛪ Discussion\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"Dismap bug feedback or new feature suggestion \"),a(\"a\",{attrs:{href:\"https://github.com/zhzyker/dismap/issues\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"click me\"),a(\"OutboundLink\")],1)]),t._v(\" \"),a(\"li\",[t._v(\"Twitter: https://twitter.com/zhzyker\")])]),t._v(\" \"),a(\"h2\",{attrs:{id:\"🌈-rulelab\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#🌈-rulelab\"}},[t._v(\"#\")]),t._v(\" 🌈 RuleLab\")]),t._v(\" \"),a(\"p\",[t._v(\"The entire rule base is a struct located in \"),a(\"a\",{attrs:{href:\"https://github.com/zhzyker/dismap/blob/main/configs/rule.go\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"rule.go\"),a(\"OutboundLink\")],1),t._v(\"\\nRough format：\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-Golang line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[t._v(\"Rule:\\nName: name /* Define rule name */\\nType: header|body|ico  /* Support recognized types, header, body, ico can be any logical combination, ico is to request favicon.ico separately and calculate MD5*/\\nMode: and|or /* Type judgment logic */\\nRule\\nInBody: str  /* Specify which str exists in the response body */\\nInHeader: str  /* Specify which str exists in the response Header */\\nInIcoMd5: str_md5  /* MD5 of favicon.ico */\\nHttp:\\nReqMethod: GET|POST  /* Custom request method, currently supports GET and POST */\\nReqPath: str  /* Custom request web path */\\nReqHeader: []str  /* Customize the header of the Http request */\\nReqBody: str  /* Customize the body of the POST request */\\n\")])]),t._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[t._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"3\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"4\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"5\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"6\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"7\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"8\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"9\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"10\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"11\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"12\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"13\")]),a(\"br\")])]),a(\"p\",[a(\"strong\",[t._v(\"Example1:\")])]),t._v(\" \"),a(\"p\",[t._v(\"Whether the character \"),a(\"code\",[t._v(\"<flink-root></flink-root>\")]),t._v(\" exists in the response body\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-Golang line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[t._v('{\"Apahce Flink\", \"body\", \"\", InStr{\"(<flink-root></flink-root>)\", \"\", \"\"}, ReqHttp{\"\", \"\", nil, \"\"}},\\n')])]),t._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[t._v(\"1\")]),a(\"br\")])]),a(\"p\",[a(\"strong\",[t._v(\"Example2:\")])]),t._v(\" \"),a(\"p\",[t._v(\"Customize the request path \"),a(\"code\",[t._v(\"/myportal/control/main\")]),t._v(\", and determine whether there are header characters and body characters in the result of the custom request\"),a(\"br\"),t._v(\"\\nIt can be found that all support regular expressions\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-Golang line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[t._v('{\"Apache OFBiz\", \"body|header\", \"or\", InStr{\"(Apache OFBiz|apache.ofbiz)\", \"(Set-Cookie: OFBiz.Visitor=(.*))\", \"\"}, ReqHttp{\"GET\", \"/myportal/control/main\", nil, \"\"}},\\n')])]),t._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[t._v(\"1\")]),a(\"br\")])]),a(\"p\",[a(\"strong\",[t._v(\"The logical relationship of header, body, ico can be combined at will, but cannot be combined repeatedly:\")])]),t._v(\" \"),a(\"p\",[t._v(\"Can: \"),a(\"code\",[t._v('\"body|header|ico\", \"or\"')]),t._v(\" or \"),a(\"code\",[t._v('\"body|header|ico\", \"or|and\"')]),t._v(\" or \"),a(\"code\",[t._v('\"body|ico\", \"and\"')]),a(\"br\"),t._v(\"\\nCan't: \"),a(\"code\",[t._v('\"body|body\", \"or\"')]),a(\"br\"),t._v(\"\\nRepeated combination is not allowed to be specified by type, but it can be achieved through InBody to determine the character: \"),a(\"code\",[t._v('\"body\", \"\", InStr{\"(str1|str2)\"}')])])])}),[],!1,null,null,null);s.default=n.exports}}]);","extractedComments":[]}