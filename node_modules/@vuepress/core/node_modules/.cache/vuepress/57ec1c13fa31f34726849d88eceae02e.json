{"remainingRequest":"/Users/spencer/WebstormProjects/NTU-AWSL/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/spencer/WebstormProjects/NTU-AWSL/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/spencer/WebstormProjects/NTU-AWSL/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/spencer/WebstormProjects/NTU-AWSL/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/Users/spencer/WebstormProjects/NTU-AWSL/docs/weapons/info_collect/Yasso/README_EN.md?vue&type=template&id=6d7661c2&","dependencies":[{"path":"/Users/spencer/WebstormProjects/NTU-AWSL/docs/weapons/info_collect/Yasso/README_EN.md","mtime":1648095428342},{"path":"/Users/spencer/WebstormProjects/NTU-AWSL/node_modules/cache-loader/dist/cjs.js","mtime":1647523943889},{"path":"/Users/spencer/WebstormProjects/NTU-AWSL/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1647523947557},{"path":"/Users/spencer/WebstormProjects/NTU-AWSL/node_modules/cache-loader/dist/cjs.js","mtime":1647523943889},{"path":"/Users/spencer/WebstormProjects/NTU-AWSL/node_modules/vue-loader/lib/index.js","mtime":1647523947557},{"path":"/Users/spencer/WebstormProjects/NTU-AWSL/node_modules/@vuepress/markdown-loader/index.js","mtime":1647523942629}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}